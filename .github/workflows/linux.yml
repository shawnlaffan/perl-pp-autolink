name: linux

on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
  pull_request:

#env:
#  PERL5LIB: /github/home/perl5/lib/perl5
#  PERL_LOCAL_LIB_ROOT: /github/home/perl5
#  PERL_MB_OPT: --install_base /github/home/perl5
#  PERL_MM_OPT: INSTALL_BASE=/github/home/perl5

jobs:
  perl:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        perl-version:
          #- '5.8'
          #- '5.10'
          #- '5.16'
          - 'latest'
          #- 'threaded'

    container:
      image: perl:${{ matrix.perl-version }}

    steps:
      - uses: actions/checkout@v3

      - name: Probe wd
        run: |
          echo $HOME
          pwd
          ls -l
          ls /github/home/

      #- name: Install pkgconfig
      #  run: apt-get install pkgconfig
        
      - name: Install Gtk etc
        run: |
          apt-get update
          apt-get --yes --force-yes install libcairo2-dev libpango1.0-dev libgtk2.0-dev libgdal-dev
          ldd `find /usr/lib -name 'libgdal*.so' -print | head -1`

      - name: perl -V
        run: |
          which perl
          echo $PATH
          perl -V

      - name: Prepare for cache
        run: |
          perl -V > perlversion.txt
          echo '20200611' >> perlversion.txt
          ls -l perlversion.txt
          

      #- name: clear cache
      #  run: rm ~/perl5/${{ runner.os }}-build-${{ hashFiles('perlversion.txt') }}

      - name: Cache CPAN modules
        uses: actions/cache@v3
        with:
          path: ~/perl5
          key: ${{ runner.os }}-build-${{ hashFiles('perlversion.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('perlversion.txt') }}

      - name: Install cpan deps 
        run: |
          cpanm --notest rlib
          #cpanm --notest Gtk2
          cpanm --notest PAR::Packer
          cpanm --notest File::BaseDir
          cpanm --notest File::Find::Rule
          cpanm --notest File::Which
          cpanm --notest Capture::Tiny
          cpanm --notest List::Util
          cpanm --notest File::Find::Rule
          cpanm --notest Path::Tiny
          cpanm --notest File::Temp
          cpanm --notest Module::ScanDeps
          cpanm --notest Env
          cpanm --notest --installdeps Alien::sqlite
          cpanm --notest -v Alien::sqlite
          cpanm --notest --installdeps Alien::proj
          cpanm --notest -v Alien::proj

      - name: Build and test
        run: |
          perl Makefile.PL
          make
          make test
      
      - name: Test Imager
        run: |
          apt-get --yes --force-yes install libfreetype-dev
          cpanm --notest Imager
          cpanm Imager::Font::FT2
          cpanm Imager::File::PNG
          perl blib/script/pp_autolink.pl --addfile "etc/imager_check/FreeSansBold.ttf;FreeSansBold.ttf" -x -o imager_check etc/imager_check/prog.pl
          echo Dylib files in packed archive:
          unzip -l imager_check | grep '.so'
          #  ./imager_check
        
      - name: Test pack
        run: |
          echo Running perl dynamic_libs check
          #  do we pack libproj
          export libtopack=`find /usr/lib -name 'libgdal*.so' -print | head -1`
          echo LIBGDAL is at $libtopack
          #perl bin/pp_autolink.pl -o checkpp tester.pl
          perl bin/pp_autolink.pl --link $libtopack -o checkpp tester.pl
          echo Running checkpp dynamic libs check
          ./checkpp
          echo Dylib files in packed archive:
          unzip -l checkpp | grep '.so'
        
      - name: Upload checkpp artefact
        uses: actions/upload-artifact@v1
        with:
          name: checkpp
          #path: ${DMG_FILE_NAME}
          path: ./checkpp
