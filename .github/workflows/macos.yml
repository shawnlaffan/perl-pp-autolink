name: macos

on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
  pull_request:

env:
  PERL5LIB: /Users/runner/perl5/lib/perl5
  PERL_LOCAL_LIB_ROOT: /Users/runner/perl5
  PERL_MB_OPT: --install_base /Users/runner/perl5
  PERL_MM_OPT: INSTALL_BASE=/Users/runner/perl5

jobs:
  perl:

    runs-on: macOS-latest

    steps:
      - uses: actions/checkout@v2

      - name: Probe wd
        run: |
          pwd
          ls -l          

      - name: Install pkgconfig
        run: brew install pkgconfig
        
      - name: Install proj
        #run: brew install gdk-pixbuf pango gtk+ proj
        run: brew install proj
      
      - name: Set up Perl
        run: |
          brew install perl
          ##curl https://cpanmin.us | perl - App::cpanminus -n
          ##echo "##[add-path]/Users/runner/perl5/bin"
          echo "{/Users/runner/perl5/bin}" >> $GITHUB_PATH
          mkdir -p ~/bin
          cd ~/bin
          curl -L https://cpanmin.us/ -o cpanm
          chmod +x cpanm
          echo "{~/bin}" >> $GITHUB_PATH
          which -a perl
          which -a cpanm

      - name: perl -V
        run: perl -V

      - name: Prepare for cache
        run: |
          perl -V > perlversion.txt
          #  change the checksum so we refresh the cache
          echo 'with shared Alien installs' >> perlversion.txt
          echo '20220917' >> perlversion.txt
          ls -l perlversion.txt

      #- name: clear cache
      #  run: rm ~/perl5/${{ runner.os }}-build-${{ hashFiles('perlversion.txt') }}

      - name: Cache CPAN modules
        uses: actions/cache@v1
        with:
          path: ~/perl5
          key: ${{ runner.os }}-build-${{ hashFiles('perlversion.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('perlversion.txt') }}

      - name: Install cpan deps 
        run: |
          echo $PATH
          which -a perl
          cpanm --notest rlib
          #cpanm --notest ExtUtils::PkgConfig
          #cpanm --notest ExtUtils::Depends
          #cpanm --notest Gtk2
          cpanm --notest PAR::Packer
          which -a pp
          cpanm --notest File::BaseDir
          cpanm --notest File::Find::Rule
          cpanm --notest File::Which
          cpanm --notest Capture::Tiny
          cpanm --notest List::Util
          cpanm --notest File::Find::Rule
          cpanm --notest Path::Tiny
          cpanm --notest File::Temp
          cpanm --notest Module::ScanDeps
          cpanm --notest Env
          cpanm --notest Alien::sqlite
          cpanm --notest Alien::proj


      - name: Build and test
        run: |
          perl Makefile.PL
          make
          make test
      
      - name: Test pack
        run: |
          echo Running perl dynamic_libs check
          echo $PATH
          which -a pp
          which -a perl
          perl -MList::Util -E'say List::Util::first {$_} (1..10)'
          #  do we pack libproj?
          #find /usr/local/Cellar -name libproj.dylib -print
          export libproj=`find /usr/local/Cellar -name libproj.dylib -print`
          echo LIBPROJ is at $libproj
          perl bin/pp_autolink.pl --link $libproj -o checkpp tester.pl
          echo Running checkpp dynamic libs check
          ./checkpp
          echo Running checkpp with /usr/local dirs out of the way
          sudo mv /usr/local/opt /usr/local/optx
          sudo mv /usr/local/Cellar /usr/local/Cellarx
          ./checkpp
          echo Putting /usr/local dirs back
          sudo mv /usr/local/optx /usr/local/opt
          sudo mv /usr/local/Cellarx /usr/local/Cellar
          echo Dylib files in packed archive:
          unzip -l checkpp | grep dylib
        
      - name: Upload checkpp artefact
        uses: actions/upload-artifact@v1
        with:
          name: checkpp
          #path: ${DMG_FILE_NAME}
          path: ./checkpp
